/* mutter-cogl-2.vapi generated by vapigen, do not modify. */

[CCode (cprefix = "Cogl", gir_namespace = "Cogl", gir_version = "2", lower_case_cprefix = "cogl_")]
namespace Cogl {
	[CCode (cheader_filename = "cogl/cogl.h", type_id = "cogl_bitmap_get_gtype ()")]
	[Compact]
	public class Bitmap : Cogl.Handle {
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Bitmap.from_file (string filename) throws GLib.Error;
		[Version (since = "1.10")]
		public Cogl.PixelFormat get_format ();
		[Version (since = "1.10")]
		public int get_height ();
		[Version (since = "1.10")]
		public int get_rowstride ();
		[Version (since = "1.0")]
		public static Cogl.Bool get_size_from_file (string filename, out int width, out int height);
		[Version (since = "1.10")]
		public int get_width ();
	}
	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
	[Compact]
	public class Euler {
	}
	[CCode (cheader_filename = "cogl/cogl.h", ref_function = "cogl_handle_ref", type_id = "cogl_handle_get_gtype ()", unref_function = "cogl_handle_unref")]
	[Compact]
	public class Handle {
		[CCode (cheader_filename = "cogl/cogl.h", cname = "cogl_is_bitmap")]
		[Version (since = "1.0")]
		public Cogl.Bool is_bitmap ();
		[CCode (cheader_filename = "cogl/cogl.h", cname = "cogl_is_material")]
		[Version (deprecated = true, deprecated_since = "1.16")]
		public Cogl.Bool is_material ();
		[CCode (cheader_filename = "cogl/cogl.h", cname = "cogl_is_offscreen")]
		public Cogl.Bool is_offscreen ();
		[CCode (cheader_filename = "cogl/cogl.h", cname = "cogl_is_program")]
		[Version (deprecated = true, deprecated_since = "1.16")]
		public Cogl.Bool is_program (Cogl.Handle handle);
		[CCode (cheader_filename = "cogl/cogl.h", cname = "cogl_is_shader")]
		[Version (deprecated = true, deprecated_since = "1.16")]
		public Cogl.Bool is_shader ();
		[CCode (cheader_filename = "cogl/cogl.h", cname = "cogl_is_texture")]
		public Cogl.Bool is_texture ();
		[CCode (cheader_filename = "cogl/cogl.h", cname = "cogl_is_vertex_buffer")]
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public Cogl.Bool is_vertex_buffer ();
		[CCode (cheader_filename = "cogl/cogl.h", cname = "cogl_is_vertex_buffer_indices")]
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public Cogl.Bool is_vertex_buffer_indices ();
	}
	[CCode (cheader_filename = "cogl/cogl.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "cogl_material_get_type ()")]
	[Compact]
	public class Material : Cogl.Handle {
		[CCode (has_construct_function = false)]
		[Version (deprecated = true, deprecated_since = "1.16")]
		public Material ();
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.2")]
		public Cogl.Material copy ();
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public void foreach_layer (Cogl.MaterialLayerCallback callback);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public void get_ambient (Cogl.Color ambient);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public Cogl.Color get_color ();
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public void get_diffuse (Cogl.Color diffuse);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public void get_emission (Cogl.Color emission);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public Cogl.Bool get_layer_point_sprite_coords_enabled (int layer_index);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.6")]
		public Cogl.MaterialWrapMode get_layer_wrap_mode_p (int layer_index);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.6")]
		public Cogl.MaterialWrapMode get_layer_wrap_mode_s (int layer_index);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.6")]
		public Cogl.MaterialWrapMode get_layer_wrap_mode_t (int layer_index);
		public unowned GLib.List<Cogl.MaterialLayer> get_layers ();
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public int get_n_layers ();
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public float get_point_size ();
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public float get_shininess ();
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public void get_specular (Cogl.Color specular);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public unowned Cogl.Handle get_user_program ();
		[Version (deprecated = true, deprecated_since = "1.2", since = "1.0")]
		public static unowned Cogl.Handle @ref (Cogl.Handle material);
		[Version (deprecated = true, deprecated_since = "1.16")]
		public void remove_layer (int layer_index);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public void set_alpha_test_function (Cogl.MaterialAlphaFunc alpha_func, float alpha_reference);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public void set_ambient (Cogl.Color ambient);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public void set_ambient_and_diffuse (Cogl.Color color);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public Cogl.Bool set_blend (string blend_string) throws GLib.Error;
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public void set_blend_constant (Cogl.Color constant_color);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public void set_color (Cogl.Color color);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public void set_color4f (float red, float green, float blue, float alpha);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public void set_color4ub (uint8 red, uint8 green, uint8 blue, uint8 alpha);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public void set_diffuse (Cogl.Color diffuse);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public void set_emission (Cogl.Color emission);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public void set_layer (int layer_index, Cogl.Handle texture);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public Cogl.Bool set_layer_combine (int layer_index, string blend_string) throws GLib.Error;
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public void set_layer_combine_constant (int layer_index, Cogl.Color constant);
		[Version (deprecated = true, deprecated_since = "1.16")]
		public void set_layer_filters (int layer_index, Cogl.MaterialFilter min_filter, Cogl.MaterialFilter mag_filter);
		[Version (deprecated = true, deprecated_since = "1.16")]
		public void set_layer_matrix (int layer_index, Cogl.Matrix matrix);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public Cogl.Bool set_layer_point_sprite_coords_enabled (int layer_index, Cogl.Bool enable) throws GLib.Error;
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public void set_layer_wrap_mode (int layer_index, Cogl.MaterialWrapMode mode);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public void set_layer_wrap_mode_p (int layer_index, Cogl.MaterialWrapMode mode);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public void set_layer_wrap_mode_s (int layer_index, Cogl.MaterialWrapMode mode);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public void set_layer_wrap_mode_t (int layer_index, Cogl.MaterialWrapMode mode);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public void set_point_size (float point_size);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public void set_shininess (float shininess);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
		public void set_specular (Cogl.Color specular);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public void set_user_program (Cogl.Handle program);
		[Version (deprecated = true, deprecated_since = "1.2", since = "1.0")]
		public static void unref (Cogl.Handle material);
	}
	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
	[Compact]
	public class MaterialLayer : Cogl.Handle {
		[Version (deprecated = true, deprecated_since = "1.16")]
		public Cogl.MaterialFilter get_mag_filter ();
		[Version (deprecated = true, deprecated_since = "1.16")]
		public Cogl.MaterialFilter get_min_filter ();
		[Version (deprecated = true, deprecated_since = "1.16")]
		public unowned Cogl.Handle get_texture ();
		[Version (deprecated = true, deprecated_since = "1.16")]
		public Cogl.MaterialLayerType get_type ();
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public Cogl.MaterialWrapMode get_wrap_mode_p ();
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public Cogl.MaterialWrapMode get_wrap_mode_s ();
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public Cogl.MaterialWrapMode get_wrap_mode_t ();
	}
	[CCode (cheader_filename = "cogl/cogl.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "cogl_matrix_get_gtype ()")]
	[Compact]
	public class Matrix {
		public float ww;
		public float wx;
		public float wy;
		public float wz;
		public float xw;
		public float xx;
		public float xy;
		public float xz;
		public float yw;
		public float yx;
		public float yy;
		public float yz;
		public float zw;
		public float zx;
		public float zy;
		public float zz;
		[Version (since = "1.6")]
		public Cogl.Matrix copy ();
		[Version (since = "1.4")]
		public Cogl.Bool equal ([CCode (type = "void*")] Cogl.Matrix v2);
		[Version (since = "1.6")]
		public void free ();
		public void frustum (float left, float right, float bottom, float top, float z_near, float z_far);
		public float get_array ();
		[Version (since = "1.2")]
		public Cogl.Bool get_inverse (out unowned Cogl.Matrix inverse);
		public void init_from_array (float array);
		public void init_from_euler (Cogl.Euler euler);
		public void init_from_quaternion (Cogl.Quaternion quaternion);
		public void init_identity ();
		[Version (since = "2.0")]
		public void init_translation (float tx, float ty, float tz);
		[Version (since = "1.8")]
		public Cogl.Bool is_identity ();
		[Version (since = "1.8")]
		public void look_at (float eye_position_x, float eye_position_y, float eye_position_z, float object_x, float object_y, float object_z, float world_up_x, float world_up_y, float world_up_z);
		public void multiply (Cogl.Matrix a, Cogl.Matrix b);
		[Version (deprecated = true, deprecated_since = "1.10")]
		public void ortho (float left, float right, float bottom, float top, float near, float far);
		[Version (since = "1.10")]
		public void orthographic (float x_1, float y_1, float x_2, float y_2, float near, float far);
		public void perspective (float fov_y, float aspect, float z_near, float z_far);
		public void project_points (int n_components, size_t stride_in, [CCode (array_length = false, type = "void*")] uint8[] points_in, out size_t stride_out, [CCode (array_length = false, type = "void*")] out uint8[] points_out, int n_points);
		public void rotate (float angle, float x, float y, float z);
		[Version (since = "2.0")]
		public void rotate_euler (Cogl.Euler euler);
		[Version (since = "2.0")]
		public void rotate_quaternion (Cogl.Quaternion quaternion);
		public void scale (float sx, float sy, float sz);
		public void transform_point (ref float x, ref float y, ref float z, ref float w);
		public void transform_points (int n_components, size_t stride_in, [CCode (array_length = false, type = "void*")] uint8[] points_in, out size_t stride_out, [CCode (array_length = false, type = "void*")] out uint8[] points_out, int n_points);
		public void translate (float x, float y, float z);
		[Version (since = "1.10")]
		public void transpose ();
		[Version (since = "1.8")]
		public void view_2d_in_frustum (float left, float right, float bottom, float top, float z_near, float z_2d, float width_2d, float height_2d);
		[Version (since = "1.8")]
		public void view_2d_in_perspective (float fov_y, float aspect, float z_near, float z_2d, float width_2d, float height_2d);
	}
	[CCode (cheader_filename = "cogl/cogl.h", ref_function = "cogl_offscreen_ref", type_id = "cogl_offscreen_get_gtype ()", unref_function = "cogl_offscreen_unref")]
	[Compact]
	public class Offscreen : Cogl.Handle {
		[CCode (has_construct_function = false)]
		[Version (deprecated = true, deprecated_since = "1.16")]
		public Offscreen.to_texture (Cogl.Texture texture);
		[CCode (has_construct_function = false)]
		public Offscreen.with_texture (Cogl.Texture texture);
	}
	[CCode (cheader_filename = "cogl/cogl.h", cname = "CoglHandle", ref_function = "cogl_program_ref", type_id = "cogl_handle_get_gtype ()", unref_function = "cogl_program_unref")]
	[Compact]
	public class Program : Cogl.Handle {
		[Version (deprecated = true, deprecated_since = "1.16")]
		public void attach_shader (Cogl.Handle shader_handle);
		[CCode (cname = "cogl_create_program")]
		[Version (deprecated = true, deprecated_since = "1.16")]
		public static unowned Cogl.Program create ();
		[Version (deprecated = true, deprecated_since = "1.16")]
		public int get_uniform_location (string uniform_name);
		[Version (deprecated = true, deprecated_since = "1.16")]
		public void link ();
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public void set_uniform_1f (int uniform_location, float value);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public void set_uniform_1i (int uniform_location, int value);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public void set_uniform_float (int uniform_location, int n_components, [CCode (array_length_cname = "count", array_length_pos = 2.5)] float[] value);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public void set_uniform_int (int uniform_location, int n_components, [CCode (array_length_cname = "count", array_length_pos = 2.5)] int[] value);
		[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
		public void set_uniform_matrix (int uniform_location, int dimensions, Cogl.Bool transpose, [CCode (array_length_cname = "count", array_length_pos = 2.5)] float[] value);
		[Version (deprecated = true, deprecated_since = "1.16")]
		public static void uniform_1f (int uniform_no, float value);
		[Version (deprecated = true, deprecated_since = "1.16")]
		public static void uniform_1i (int uniform_no, int value);
		[Version (deprecated = true, deprecated_since = "1.16")]
		public static void uniform_float (int uniform_no, int size, [CCode (array_length_cname = "count", array_length_pos = 2.5)] float[] value);
		[Version (deprecated = true, deprecated_since = "1.16")]
		public static void uniform_int (int uniform_no, int size, [CCode (array_length_cname = "count", array_length_pos = 2.5)] int[] value);
		[Version (deprecated = true, deprecated_since = "1.16")]
		public static void uniform_matrix (int uniform_no, int size, Cogl.Bool transpose, [CCode (array_length_cname = "count", array_length_pos = 2.5)] float[] value);
		[Version (deprecated = true, deprecated_since = "1.16")]
		public void use ();
	}
	[CCode (cheader_filename = "cogl/cogl.h", copy_function = "cogl_quaternion_copy", free_function = "cogl_quaternion_free", type_id = "cogl_quaternion_get_gtype ()")]
	[Compact]
	public class Quaternion {
	}
	[CCode (cheader_filename = "cogl/cogl.h", cname = "CoglHandle", ref_function = "cogl_shader_ref", type_id = "cogl_handle_get_gtype ()", unref_function = "cogl_shader_unref")]
	[Compact]
	public class Shader : Cogl.Handle {
		[Version (deprecated = true, deprecated_since = "1.16")]
		public void compile ();
		[CCode (cname = "cogl_create_shader")]
		[Version (deprecated = true, deprecated_since = "1.16")]
		public static unowned Cogl.Shader create (Cogl.ShaderType shader_type);
		[Version (deprecated = true, deprecated_since = "1.16")]
		public string get_info_log ();
		[Version (deprecated = true, deprecated_since = "1.16")]
		public Cogl.ShaderType get_type ();
		[Version (deprecated = true, deprecated_since = "1.16")]
		public Cogl.Bool is_compiled ();
		[Version (deprecated = true, deprecated_since = "1.16")]
		public void source (string source);
	}
	[CCode (cheader_filename = "cogl/cogl.h", cname = "CoglHandle", ref_function = "cogl_vertex_buffer_ref", type_id = "cogl_handle_get_gtype ()", unref_function = "cogl_vertex_buffer_unref")]
	[Compact]
	public class VertexBuffer : Cogl.Handle {
		[Version (deprecated = true, deprecated_since = "1.16")]
		public void add (string attribute_name, uint8 n_components, Cogl.AttributeType type, Cogl.Bool normalized, uint16 stride, void* pointer);
		[Version (deprecated = true, deprecated_since = "1.16")]
		public void @delete (string attribute_name);
		[Version (deprecated = true, deprecated_since = "1.16")]
		public void disable (string attribute_name);
		[Version (deprecated = true, deprecated_since = "1.16")]
		public void draw (Cogl.VerticesMode mode, int first, int count);
		[Version (deprecated = true, deprecated_since = "1.16")]
		public void draw_elements (Cogl.VerticesMode mode, Cogl.Handle indices, int min_index, int max_index, int indices_offset, int count);
		[Version (deprecated = true, deprecated_since = "1.16")]
		public void enable (string attribute_name);
		[Version (deprecated = true, deprecated_since = "1.16")]
		public uint get_n_vertices ();
		[Version (deprecated = true, deprecated_since = "1.16")]
		public static unowned Cogl.Handle indices_get_for_quads (uint n_indices);
		[Version (deprecated = true, deprecated_since = "1.16")]
		public Cogl.IndicesType indices_get_type ();
		[Version (deprecated = true, deprecated_since = "1.16")]
		public static unowned Cogl.Handle @new (uint n_vertices);
		[Version (deprecated = true, deprecated_since = "1.16")]
		public void submit ();
	}
	[CCode (cheader_filename = "cogl/cogl.h", type_id = "cogl_texture_get_gtype ()")]
	public class Texture : Cogl.Handle {
		public Cogl.Bool allocate () throws GLib.Error;
		[CCode (cname = "cogl_texture_new_from_bitmap")]
		[Version (deprecated = true, deprecated_since = "1.18", since = "1.0")]
		public Texture.from_bitmap (Cogl.Bitmap bitmap, Cogl.TextureFlags flags, Cogl.PixelFormat internal_format);
		[CCode (cname = "cogl_texture_new_from_data")]
		[Version (deprecated = true, deprecated_since = "1.18", since = "0.8")]
		public Texture.from_data (int width, int height, Cogl.TextureFlags flags, Cogl.PixelFormat format, Cogl.PixelFormat internal_format, int rowstride, [CCode (array_length = false)]  uint8[] data);
		[CCode (cname = "cogl_texture_new_from_file")]
		[Version (deprecated = true, deprecated_since = "1.18", since = "0.8")]
		public Texture.from_file (string filename, Cogl.TextureFlags flags, Cogl.PixelFormat internal_format) throws GLib.Error;
		[CCode (cname = "cogl_texture_new_from_foreign")]
		[Version (deprecated = true, deprecated_since = "1.18", since = "0.8")]
		public Texture.from_foreign (uint gl_handle, uint gl_target, uint width, uint height, uint x_pot_waste, uint y_pot_waste, Cogl.PixelFormat format);
		[Version (since = "1.18")]
		public Cogl.TextureComponents get_components ();
		public int get_data (Cogl.PixelFormat format, uint rowstride, [CCode (array_length = false, type = "uint8_t*")] uint8[] data);
		public Cogl.Bool get_gl_texture (out uint out_gl_handle, out uint out_gl_target);
		public uint get_height ();
		public int get_max_waste ();
		[Version (since = "1.18")]
		public Cogl.Bool get_premultiplied ();
		public uint get_width ();
		public Cogl.Bool is_sliced ();
		[Version (deprecated = true, deprecated_since = "1.18", since = "1.2")]
		public Texture.new_from_sub_texture (Cogl.Texture texture, int sub_x, int sub_y, int sub_width, int sub_height);
		[Version (deprecated = true, deprecated_since = "1.18", since = "0.8")]
		public Texture.new_with_size (uint width, uint height, Cogl.TextureFlags flags, Cogl.PixelFormat internal_format);
		[Version (since = "1.18")]
		public void set_components (Cogl.TextureComponents components);
		public Cogl.Bool set_data (Cogl.PixelFormat format, int rowstride, [CCode (array_length = false, type = "const uint8_t*")] uint8[] data, int level) throws GLib.Error;
		[Version (since = "1.18")]
		public void set_premultiplied (Cogl.Bool premultiplied);
		public Cogl.Bool set_region (int src_x, int src_y, int dst_x, int dst_y, uint dst_width, uint dst_height, int width, int height, Cogl.PixelFormat format, uint rowstride, [CCode (array_length = false, type = "const uint8_t*")] uint8[] data);
		[Version (since = "1.8")]
		public Cogl.Bool set_region_from_bitmap (int src_x, int src_y, int dst_x, int dst_y, uint dst_width, uint dst_height, Cogl.Bitmap bitmap);
		[CCode (cname = "cogl_texture_new_with_size")]
		[Version (deprecated = true, deprecated_since = "1.18", since = "0.8")]
		public Texture.with_size (uint width, uint height, Cogl.TextureFlags flags, Cogl.PixelFormat internal_format);
	}
	[CCode (cheader_filename = "cogl/cogl.h")]
	[SimpleType]
	public struct Angle : int32 {
	}
	[BooleanType]
	[CCode (cheader_filename = "cogl/cogl.h")]
	[SimpleType]
	public struct Bool : bool {
	}
	[CCode (cheader_filename = "cogl/cogl.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "cogl_color_get_gtype ()")]
	[Version (since = "1.0")]
	public struct Color {
		[CCode (has_construct_function = false, type = "CoglColor*")]
		public Color ();
		public Cogl.Color? copy ();
		public Cogl.Bool equal ([CCode (type = "void*")] Cogl.Color v2);
		public void free ();
		[CCode (cname = "cogl_color_init_from_4f")]
		[Version (since = "1.4")]
		public Color.from_4f (float red, float green, float blue, float alpha);
		[CCode (cname = "cogl_color_init_from_4fv")]
		[Version (since = "1.4")]
		public Color.from_4fv (float color_array);
		[CCode (cname = "cogl_color_init_from_4ub")]
		[Version (since = "1.4")]
		public Color.from_4ub (uint8 red, uint8 green, uint8 blue, uint8 alpha);
		[CCode (cname = "cogl_color_init_from_hsl")]
		[Version (since = "1.16")]
		public Color.from_hsl (float hue, float saturation, float luminance);
		public float get_alpha ();
		public uint8 get_alpha_byte ();
		public float get_alpha_float ();
		public float get_blue ();
		public uint8 get_blue_byte ();
		public float get_blue_float ();
		public float get_green ();
		public uint8 get_green_byte ();
		public float get_green_float ();
		public float get_red ();
		public uint8 get_red_byte ();
		public float get_red_float ();
		public void premultiply ();
		[Version (since = "1.4")]
		public void set_alpha (float alpha);
		[Version (since = "1.4")]
		public void set_alpha_byte (uint8 alpha);
		[Version (since = "1.4")]
		public void set_alpha_float (float alpha);
		[Version (since = "1.4")]
		public void set_blue (float blue);
		[Version (since = "1.4")]
		public void set_blue_byte (uint8 blue);
		[Version (since = "1.4")]
		public void set_blue_float (float blue);
		[Version (deprecated = true, deprecated_since = "1.4", since = "1.0")]
		public void set_from_4f (float red, float green, float blue, float alpha);
		[Version (deprecated = true, deprecated_since = "1.4", since = "1.0")]
		public void set_from_4ub (uint8 red, uint8 green, uint8 blue, uint8 alpha);
		[Version (since = "1.4")]
		public void set_green (float green);
		[Version (since = "1.4")]
		public void set_green_byte (uint8 green);
		[Version (since = "1.4")]
		public void set_green_float (float green);
		[Version (since = "1.4")]
		public void set_red (float red);
		[Version (since = "1.4")]
		public void set_red_byte (uint8 red);
		[Version (since = "1.4")]
		public void set_red_float (float red);
		[Version (since = "1.16")]
		public void to_hsl (out float hue, out float saturation, out float luminance);
		[Version (since = "1.4")]
		public void unpremultiply ();
	}
	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
	public struct TextureVertex {
		public float x;
		public float y;
		public float z;
		public float tx;
		public float ty;
		public Cogl.Color color;
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_ATTRIBUTE_TYPE_", has_type_id = false)]
	[Version (since = "1.0")]
	public enum AttributeType {
		BYTE,
		UNSIGNED_BYTE,
		SHORT,
		UNSIGNED_SHORT,
		FLOAT
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_BUFFER_BIT_", has_type_id = false)]
	[Flags]
	[Version (since = "1.0")]
	public enum BufferBit {
		COLOR,
		DEPTH,
		STENCIL
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_", has_type_id = false)]
	[Flags]
	[Version (since = "0.8")]
	public enum BufferTarget {
		WINDOW_BUFFER,
		OFFSCREEN_BUFFER
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_COLOR_MASK_", has_type_id = false)]
	[Flags]
	public enum ColorMask {
		NONE,
		RED,
		GREEN,
		BLUE,
		ALPHA,
		ALL
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_DEPTH_TEST_FUNCTION_", has_type_id = false)]
	public enum DepthTestFunction {
		NEVER,
		LESS,
		EQUAL,
		LEQUAL,
		GREATER,
		NOTEQUAL,
		GEQUAL,
		ALWAYS
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_FEATURE_", has_type_id = false)]
	[Flags]
	[Version (since = "0.8")]
	public enum FeatureFlags {
		TEXTURE_RECTANGLE,
		TEXTURE_NPOT,
		TEXTURE_YUV,
		TEXTURE_READ_PIXELS,
		SHADERS_GLSL,
		OFFSCREEN,
		OFFSCREEN_MULTISAMPLE,
		OFFSCREEN_BLIT,
		FOUR_CLIP_PLANES,
		STENCIL_BUFFER,
		VBOS,
		PBOS,
		UNSIGNED_INT_INDICES,
		DEPTH_RANGE,
		TEXTURE_NPOT_BASIC,
		TEXTURE_NPOT_MIPMAP,
		TEXTURE_NPOT_REPEAT,
		POINT_SPRITE,
		TEXTURE_3D,
		SHADERS_ARBFP,
		MAP_BUFFER_FOR_READ,
		MAP_BUFFER_FOR_WRITE,
		ONSCREEN_MULTIPLE,
		DEPTH_TEXTURE
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_FILTER_", has_type_id = false)]
	public enum FilterReturn {
		CONTINUE,
		REMOVE
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_FOG_MODE_", has_type_id = false)]
	[Version (since = "1.0")]
	public enum FogMode {
		LINEAR,
		EXPONENTIAL,
		EXPONENTIAL_SQUARED
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_INDICES_TYPE_UNSIGNED_", has_type_id = false)]
	public enum IndicesType {
		BYTE,
		SHORT,
		INT
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_MATERIAL_ALPHA_FUNC_", has_type_id = false)]
	public enum MaterialAlphaFunc {
		NEVER,
		LESS,
		EQUAL,
		LEQUAL,
		GREATER,
		NOTEQUAL,
		GEQUAL,
		ALWAYS
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_MATERIAL_FILTER_", has_type_id = false)]
	public enum MaterialFilter {
		NEAREST,
		LINEAR,
		NEAREST_MIPMAP_NEAREST,
		LINEAR_MIPMAP_NEAREST,
		NEAREST_MIPMAP_LINEAR,
		LINEAR_MIPMAP_LINEAR
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_MATERIAL_LAYER_TYPE_", has_type_id = false)]
	[Version (since = "1.0")]
	public enum MaterialLayerType {
		[CCode (cname = "COGL_MATERIAL_LAYER_TYPE_TEXTURE")]
		MATERIAL_LAYER_TYPE_TEXTURE
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_MATERIAL_WRAP_MODE_", has_type_id = false)]
	[Version (since = "1.4")]
	public enum MaterialWrapMode {
		REPEAT,
		CLAMP_TO_EDGE,
		AUTOMATIC
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_PIXEL_FORMAT_", has_type_id = false)]
	[Flags]
	[Version (since = "0.8")]
	public enum PixelFormat {
		ANY,
		A_8,
		RGB_565,
		RGBA_4444,
		RGBA_5551,
		YUV,
		G_8,
		RG_88,
		RGB_888,
		BGR_888,
		RGBA_8888,
		BGRA_8888,
		ARGB_8888,
		ABGR_8888,
		RGBA_1010102,
		BGRA_1010102,
		ARGB_2101010,
		ABGR_2101010,
		RGBA_8888_PRE,
		BGRA_8888_PRE,
		ARGB_8888_PRE,
		ABGR_8888_PRE,
		RGBA_4444_PRE,
		RGBA_5551_PRE,
		RGBA_1010102_PRE,
		BGRA_1010102_PRE,
		ARGB_2101010_PRE,
		ABGR_2101010_PRE,
		DEPTH_16,
		DEPTH_32,
		DEPTH_24_STENCIL_8
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_READ_PIXELS_COLOR_", has_type_id = false)]
	[Flags]
	[Version (since = "1.0")]
	public enum ReadPixelsFlags {
		[CCode (cname = "COGL_READ_PIXELS_COLOR_BUFFER")]
		READ_PIXELS_COLOR_BUFFER
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_SHADER_TYPE_", has_type_id = false)]
	[Version (since = "1.0")]
	public enum ShaderType {
		VERTEX,
		FRAGMENT
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_STEREO_", has_type_id = false)]
	public enum StereoMode {
		BOTH,
		LEFT,
		RIGHT
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_TEXTURE_COMPONENTS_", has_type_id = false)]
	[Version (since = "1.18")]
	public enum TextureComponents {
		A,
		RG,
		RGB,
		RGBA,
		DEPTH
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_TEXTURE_", has_type_id = false)]
	[Flags]
	[Version (since = "1.0")]
	public enum TextureFlags {
		NONE,
		NO_AUTO_MIPMAP,
		NO_SLICING,
		NO_ATLAS
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_TEXTURE_TYPE_", has_type_id = false)]
	[Version (since = "1.10")]
	public enum TextureType {
		@2D,
		@3D,
		RECTANGLE
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_VERTICES_MODE_", has_type_id = false)]
	[Version (since = "1.0")]
	public enum VerticesMode {
		POINTS,
		LINES,
		LINE_LOOP,
		LINE_STRIP,
		TRIANGLES,
		TRIANGLE_STRIP,
		TRIANGLE_FAN
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_WINDING_", has_type_id = false)]
	public enum Winding {
		CLOCKWISE,
		COUNTER_CLOCKWISE
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_WINSYS_FEATURE_", has_type_id = false)]
	public enum WinsysFeature {
		MULTIPLE_ONSCREEN,
		SWAP_THROTTLE,
		VBLANK_COUNTER,
		VBLANK_WAIT,
		TEXTURE_FROM_PIXMAP,
		SWAP_BUFFERS_EVENT,
		SWAP_REGION,
		SWAP_REGION_THROTTLE,
		SWAP_REGION_SYNCHRONIZED,
		BUFFER_AGE,
		SYNC_AND_COMPLETE_EVENT,
		N_FEATURES
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_BITMAP_ERROR_")]
	[Version (since = "1.4")]
	public errordomain BitmapError {
		FAILED,
		UNKNOWN_TYPE,
		CORRUPT_IMAGE;
		public static uint32 quark ();
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_BLEND_STRING_ERROR_")]
	[Version (since = "1.0")]
	public errordomain BlendStringError {
		PARSE_ERROR,
		ARGUMENT_PARSE_ERROR,
		INVALID_ERROR,
		GPU_UNSUPPORTED_ERROR;
		public static uint32 quark ();
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_RENDERER_ERROR_")]
	public errordomain RendererError {
		XLIB_DISPLAY_OPEN,
		BAD_CONSTRAINT
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_SYSTEM_ERROR_")]
	[Version (since = "1.4")]
	public errordomain SystemError {
		UNSUPPORTED,
		NO_MEMORY
	}
	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_TEXTURE_ERROR_")]
	[Version (since = "1.8")]
	public errordomain TextureError {
		SIZE,
		FORMAT,
		BAD_PARAMETER,
		TYPE;
		public static uint32 quark ();
	}
	[CCode (cheader_filename = "cogl/cogl.h", instance_pos = 2.9)]
	[Version (deprecated = true, deprecated_since = "1.16", since = "1.4")]
	public delegate Cogl.Bool MaterialLayerCallback (Cogl.Material material, int layer_index);
	[CCode (cheader_filename = "cogl/cogl.h", cname = "COGL_AFIRST_BIT")]
	public const int AFIRST_BIT;
	[CCode (cheader_filename = "cogl/cogl.h", cname = "COGL_A_BIT")]
	public const int A_BIT;
	[CCode (cheader_filename = "cogl/cogl.h", cname = "COGL_BGR_BIT")]
	public const int BGR_BIT;
	[CCode (cheader_filename = "cogl/cogl.h", cname = "COGL_DEPTH_BIT")]
	public const int DEPTH_BIT;
	[CCode (cheader_filename = "cogl/cogl.h", cname = "COGL_PREMULT_BIT")]
	public const int PREMULT_BIT;
	[CCode (cheader_filename = "cogl/cogl.h", cname = "COGL_STENCIL_BIT")]
	public const int STENCIL_BIT;
	[CCode (cheader_filename = "cogl/cogl.h", cname = "COGL_TEXTURE_MAX_WASTE")]
	public const int TEXTURE_MAX_WASTE;
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
	public static void begin_gl ();
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.2")]
	public static Cogl.Bool check_extension (string name, string ext);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.16")]
	public static void clear (Cogl.Color color, ulong buffers);
	[CCode (cheader_filename = "cogl/cogl.h")]
	public static Cogl.Bool clutter_check_extension_CLUTTER (string name, string ext);
	[CCode (cheader_filename = "cogl/cogl.h")]
	public static Cogl.Bool clutter_winsys_has_feature_CLUTTER (Cogl.WinsysFeature feature);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (since = "2.0")]
	public static void debug_matrix_print (Cogl.Matrix matrix);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.16")]
	public static void disable_fog ();
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
	public static void end_gl ();
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.10")]
	public static Cogl.Bool features_available (Cogl.FeatureFlags features);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (since = "1.0")]
	public static void flush ();
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.10", since = "0.8.2")]
	public static void frustum (float left, float right, float bottom, float top, float z_near, float z_far);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.16")]
	public static Cogl.Bool get_backface_culling_enabled ();
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.8")]
	public static void get_bitmasks (out int red, out int green, out int blue, out int alpha);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.16")]
	public static Cogl.Bool get_depth_test_enabled ();
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.10", since = "0.8")]
	public static Cogl.FeatureFlags get_features ();
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.10")]
	public static void get_modelview_matrix (out unowned Cogl.Matrix matrix);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
	public static GLib.OptionGroup get_option_group ();
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.10")]
	public static void get_projection_matrix (out unowned Cogl.Matrix matrix);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.16", since = "1.6")]
	public static unowned Cogl.Material get_source ();
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.10")]
	public static void get_viewport ([CCode (array_length = false)] out float v[4]);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.18")]
	public static GLib.Type gtype_matrix_get_type ();
	[CCode (cheader_filename = "cogl/cogl.h")]
	public static void onscreen_clutter_backend_set_size_CLUTTER (int width, int height);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.10", since = "1.0")]
	public static void ortho (float left, float right, float bottom, float top, float near, float far);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.10")]
	public static void perspective (float fovy, float aspect, float z_near, float z_far);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (since = "1.0")]
	public static void polygon ([CCode (array_length_cname = "n_vertices", array_length_pos = 1.5, array_length_type = "guint", type = "const CoglTextureVertex*")] Cogl.TextureVertex[] vertices, Cogl.Bool use_color);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.10")]
	public static void pop_matrix ();
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.16", since = "1.6")]
	public static void pop_source ();
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.10")]
	public static void push_matrix ();
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.16", since = "1.6")]
	public static void push_source ([CCode (type = "void*")] Cogl.Material material);
	[CCode (cheader_filename = "cogl/cogl.h")]
	public static void rectangle (float x_1, float y_1, float x_2, float y_2);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (since = "1.0")]
	public static void rectangle_with_multitexture_coords (float x1, float y1, float x2, float y2, [CCode (array_length = false)] float[] tex_coords, int tex_coords_len);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (since = "1.0")]
	public static void rectangle_with_texture_coords (float x1, float y1, float x2, float y2, float tx1, float ty1, float tx2, float ty2);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (since = "1.0")]
	public static void rectangles ([CCode (array_length = false)] float[] verts, uint n_rects);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (since = "0.8.6")]
	public static void rectangles_with_texture_coords ([CCode (array_length = false)] float[] verts, uint n_rects);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.10")]
	public static void rotate (float angle, float x, float y, float z);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.10")]
	public static void scale (float x, float y, float z);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.16")]
	public static void set_backface_culling_enabled (Cogl.Bool setting);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.16")]
	public static void set_depth_test_enabled (Cogl.Bool setting);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.16")]
	public static void set_fog (Cogl.Color fog_color, Cogl.FogMode mode, float density, float z_near, float z_far);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.10")]
	public static void set_modelview_matrix (Cogl.Matrix matrix);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.10")]
	public static void set_projection_matrix (Cogl.Matrix matrix);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
	public static void set_source ([CCode (type = "void*")] Cogl.Material material);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
	public static void set_source_color (Cogl.Color color);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
	public static void set_source_color4f (float red, float green, float blue, float alpha);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
	public static void set_source_color4ub (uint8 red, uint8 green, uint8 blue, uint8 alpha);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
	public static void set_source_texture (Cogl.Texture texture);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.8", since = "1.2")]
	public static void set_viewport (int x, int y, int width, int height);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.10", since = "1.4")]
	public static void transform (Cogl.Matrix matrix);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.10")]
	public static void translate (float x, float y, float z);
	[CCode (cheader_filename = "cogl/cogl.h")]
	[Version (deprecated = true, deprecated_since = "1.8", since = "0.8.2")]
	public static void viewport (uint width, uint height);
}
